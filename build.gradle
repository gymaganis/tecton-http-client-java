plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'ai.tecton'
version '1.0.0b1'

repositories {
    mavenCentral()
}

dependencies {
    //OkHttp Client
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'
    //Moshi JSON Parsing Library
    implementation group: 'com.squareup.moshi', name: 'moshi', version: '1.9.3'
    //Moshi JSON Adapter Library for Standard Java Types
    implementation group: 'com.squareup.moshi', name: 'moshi-adapters', version: '1.9.3'
    //StringUtils and Validation checks
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    //JUnit tests
    testImplementation 'junit:junit:4.13.2'
    //Mock Server for OkHttp Testing
    testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")
}

jar {
    // Will package all dependencies into the jar
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnit()
    testLogging {
        showStandardStreams = true
        events("skipped", "failed")

    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    repositories {
        maven {
            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
            if (version.endsWith('-SNAPSHOT')) {
                url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Tecton Java Client'
                artifactId = 'http-client'
                packaging = 'jar'
                description = 'A Java Client Library for Tecton Online Feature Store'
                url = 'https://github.com/tecton-ai/tecton-http-client-java'

                scm {
                    connection = 'scm:git:git@github.com:tecton-ai/tecton-http-client-java.git'
                    developerConnection = 'scm:git:git@github.com:tecton-ai/tecton-http-client-java.git'
                    url = 'https://github.com/tecton-ai/tecton-http-client-java'
                }

                developers {
                    developer {
                        name = 'PlatEng-RSS'
                        email = 'plateng-rss-team@tecton.ai'
                        organization = 'Tecton'
                        organizationUrl = 'https://www.tecton.ai/'

                    }
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
